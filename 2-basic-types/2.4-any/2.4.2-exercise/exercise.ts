// --------------------------------------------------------------------------
// ✅ TypeScript의 `any` 타입
// --------------------------------------------------------------------------

// 1. `any` 타입으로 변수를 선언하고 문자열 값을 할당하세요.

let any: any = "문자열 값";

// 2. 그 변수를 숫자로 다시 할당하세요.
any = 28;

// 3. 그 변수를 name 프로퍼티가 "TS"인 객체로 다시 할당하세요.

any = { name: "TS" };

// 4. 매개변수 타입이 `any`인 함수를 만들고, 그 타입과 값을 로그로 출력하세요.

const anyLog = (value: any) => {
  console.log(value, typeof value);
};

// 5. 그 함수를 문자열, 숫자, 객체, 배열 등 다양한 타입의 인자로 호출하세요.
anyLog("문자열");
anyLog(13);
anyLog({ name: "우진" });
anyLog([1, 2, 3]);

// 6. TypeScript에서 `any`를 사용하는 것이 왜 유용할 수도 있고, 동시에 문제가 될 수도 있는지 설명하세요.
// any는 모든 타입을 허용하는 최상위 타입이라서 타입 체크에 유연하나, 동시에 모든 타입을 허용해서 타입스크립트의 장점이 사라짐
